generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model carritos {
  id            Int             @id @default(autoincrement())
  usuariosId    Int             @unique
  usuarios      usuarios        @relation(fields: [usuariosId], references: [id])
  carritositems carritositems[]
}

model carritositems {
  id               Int               @id @default(autoincrement())
  carritosId       Int
  planesId         Int?
  carritos         carritos          @relation(fields: [carritosId], references: [id])
  planes           planes?           @relation(fields: [planesId], references: [id], map: "CarritosItems_planesId_fkey")
  emprendimientoId Int
  emprendimientos  emprendimientos[]

  @@index([carritosId], map: "CarritosItems_carritosId_fkey")
  @@index([planesId], map: "CarritosItems_planesId_fkey")
}

model categorias {
  id              Int               @id @default(autoincrement())
  nombre          String?           @db.VarChar(50)
  emprendimientos emprendimientos[]
}

model direcciones {
  id          Int    @id @default(autoincrement())
  calle       String
  localidad   String
  provincia   String
  numero      Int
  piso        Int
  depto       String
  descripcion String
}

model emprendimientos {
  id              Int            @id @default(autoincrement())
  nombre          String?        @db.VarChar(255)
  descripcion     String?        @db.VarChar(255)
  ubicacion       String?        @db.VarChar(255)
  contacto        String?        @db.VarChar(255)
  imagen          String?        @db.VarChar(255)
  redes           String?        @db.VarChar(255)
  visibilidad     Int
  carritosItemsId Int?
  categoriasId    Int?
  usuariosId      Int?
  carritositems   carritositems? @relation(fields: [carritosItemsId], references: [id], map: "Emprendimientos_carritosItemsId_fkey")
  categorias      categorias?    @relation(fields: [categoriasId], references: [id], map: "Emprendimientos_categoriasId_fkey")
  usuarios        usuarios?      @relation(fields: [usuariosId], references: [id], map: "Emprendimientos_usuariosId_fkey")

  @@index([carritosItemsId], map: "Emprendimientos_carritosItemsId_fkey")
  @@index([categoriasId], map: "Emprendimientos_categoriasId_fkey")
  @@index([usuariosId], map: "Emprendimientos_usuariosId_fkey")
}

model favoritos {
  id Int @id @default(autoincrement())
}

model historiales {
  id Int @id @default(autoincrement())
}

model imagenes {
  id    Int     @id @default(autoincrement())
  value String
  logo  Boolean
}

model metodopago {
  id Int @id @default(autoincrement())
}

model pagos {
  id        Int      @id @default(autoincrement())
  usuarioId Int
  usuarios  usuarios @relation(fields: [usuarioId], references: [id], map: "Pagos_usuarioId_fkey")

  @@index([usuarioId], map: "Pagos_usuarioId_fkey")
}

model permisos {
  id     Int     @id @default(autoincrement())
  nombre String? @db.VarChar(255)
}

model planes {
  id            Int             @id @default(autoincrement())
  nombre        String
  precio        Float
  carritositems carritositems[]
}

model roles {
  id     Int     @id @default(autoincrement())
  nombre String? @db.VarChar(50)
}

model rubros {
  id     Int     @id @default(autoincrement())
  nombre String? @db.VarChar(50)
}

model suscripciones {
  id          Int      @id @default(autoincrement())
  nombre      String
  fechaInicio DateTime
  fechaFinal  DateTime
  pago        Float
}

model ubicaciones {
  id  Int    @id @default(autoincrement())
  lat String
  lng String
}

model usuarios {
  id              Int               @id @default(autoincrement())
  nombre          String?           @db.VarChar(255)
  apellido        String?           @db.VarChar(255)
  contrasena      String?           @db.VarChar(20)
  email           String            @unique(map: "email") @db.VarChar(255)
  fechaNacimiento DateTime
  estado          Boolean
  emprendimientos emprendimientos[]
  pagos           pagos[]
  carritos        carritos?
}
