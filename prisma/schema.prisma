//db config (prisma)
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}


// @Guille
// usuarios
// emprendimientos
// historial
// favorito

// id: int
// nombre: string
// apellido: string
// email: string
// fechaNacimiento: date
// contraseña: string
// fechaRegistro: date
// estado: boolean
model Usuarios {
  id              Int      @id @default(autoincrement())
  nombre          String?  @db.VarChar(255)
  apellido        String?  @db.VarChar(255)
  email           String   @unique(map: "email") @db.VarChar(255)
  fechaNacimiento DateTime
  pagos           Pagos[]
}

// emprendimientos
// id: int
// Nombre: string
// Descripción: string
// Ubicación: string (descrip de donde queda?)
// Contacto: string
// Imagen: string (url de donde esta almacenado???)
// redes: string (redes sociales)
// OrdenesdePago ????????
// boosteoActivo ???????????
// visibilidad: int

model Emprendimientos {
  id          Int     @id @default(autoincrement())
  nombre      String? @db.VarChar(255)
  descripcion String? @db.VarChar(255)
  ubicacion   String? @db.VarChar(255)
  contacto    String? @db.VarChar(255)
  imagen      String? @db.VarChar(255)
  redes       String? @db.VarChar(255)
  visibilidad Int
}

// historial
// id: int
// + fk_idUsuario: int
// + fk_idEmprendmnto: int

model Historiales {
  id Int @id @default(autoincrement())
}

// favoritos
// id: int

model Favoritos {
  id Int @id @default(autoincrement())
}

model Suscripciones {
  id            Int            @id  @default(autoincrement())
  nombre        String         
  fechaInicio   DateTime
  fechaFinal    DateTime
  pago          Float
}

model Pagos {
  id            Int            @id  @default(autoincrement())
  usuario       Usuarios       @relation(fields: [usuarioId], references: [id])
  usuarioId     Int
}

model MetodoPago {
  id            Int            @id  @default(autoincrement())
}
model Direcciones {
  id          Int    @id @default(autoincrement())
  calle       String
  localidad   String
  provincia   String
  numero      Int
  piso        Int
  depto       String
  descripcion String
}

model Imagenes {
  id    Int    @id @default(autoincrement())
  value String
  logo  Boolean
}

model Ubicaciones {
  id  Int    @id @default(autoincrement())
  lat String
  lng String
}

model Planes {
  id     Int     @id @default(autoincrement())
  nombre String
  precio Float
}

model Roles {
  id Int @id @default(autoincrement())
  nombre String? @db.VarChar(50)
}

model Permisos {
  id Int @id @default(autoincrement())
  nombre String? @db.VarChar(255)
}

model Rubros {
  id Int @id @default(autoincrement())
  nombre String? @db.VarChar(50)
}

model Categorias {
  id Int @id @default(autoincrement())
  nombre String? @db.VarChar(50)
}
